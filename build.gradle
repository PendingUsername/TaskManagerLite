plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

application {
  // Java module and main class configuration
  mainModule = 'com.example.taskmanagerproject'
  mainClass = 'com.example.taskmanagerproject.Main'
}

// JavaFX plugin configuration
javafx {
  version = '17.0.6'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  // JavaFX core modules
  implementation "org.openjfx:javafx-controls:17.0.6"
  implementation "org.openjfx:javafx-fxml:17.0.6"

  // ControlsFX for additional UI components
  implementation 'org.controlsfx:controlsfx:11.2.1'

  // ValidatorFX for input validation
  implementation 'net.synedra:validatorfx:0.5.0'

  // Ikonli core and FontAwesome icon pack
  implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
  implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:12.3.1'

  // JUnit 5 for testing
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

// Ensure the resources folder is included in the build
sourceSets {
  main {
    java {
      srcDirs = ['src/main/java']
    }
    resources {
      srcDirs = ['src/main/resources']  // Ensure this is where CSS and other resources are located
    }
  }
}

// Use JUnit Platform for running tests
test {
  useJUnitPlatform()
}

// JLink plugin to create a customized JRE
jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}
